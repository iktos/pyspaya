[tool.poetry]
name = "pyspaya"
version = "1.1.0"
description = "Python client for Spaya"
authors = ["Iktos"]
readme = "README.md"
packages = [
    { include = "iktos" },
    { include = "iktos/**/*.py" },
]

[project.urls]
Documentation = "https://iktos.github.io/pyspaya/"
Source = "https://github.com/iktos/pyspaya"

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.31.0"
websockets = "^12.0"
pandas = "*"

[tool.poetry.group.test.dependencies]
taskipy = "^1.2.1"
flake8 = "^5.0.4"
mypy = "^1.4.0"
black = "23.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
responses = "^0.23.1"
types-requests = "*"
pandas-stubs = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "^3.5.3"
sphinx_rtd_theme = "*"
sphinx-autodoc-typehints = "*"
jinja2 = "3.0.3"

[tool.taskipy.tasks]
black = "black iktos/ tests/"
check-black = "black iktos/ tests/ --check"
test = "python -m pytest --cov ./iktos --cov-report="
mypy = "mypy iktos/"
linter = "flake8 iktos/"
docs = "sphinx-build -b html -d docs/build/doctrees docs/source public"
cov-html = "coverage html"
cov-report = "coverage report"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
omit = ["**/tests/*.py"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
